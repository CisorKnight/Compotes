import_operations.form.submit: Import file
import_operations.validators.invalid_file_name: Filename "{{ file_name }}" does not respect the "{year}-{month}.csv" format.
import_operations.validators.invalid_line_headers: 'CSV headers order is not valid. Available fields: {{ headers }}'
import_operations.form.success: |
    ]-Inf, 0] No operation was added from the file.
    |[1, +Inf[ Inserted %count% operations!
import_operations.form.file_help: |
    <ul>
        <li>File format must be CSV.</li>
        <li>File name must be <code>{year}-{month}.csv</code>.</li>
        <li>First line of the file will be ignored, so it can contain headers or an empty line.</li>
        <li>Each <strong>line column</strong> must be the following:
            <ul>
                <li><strong>Date</strong> in <code>day/month/year</code> format (nothing else supported for now).</li>
                <li><strong>Operation type</strong> (given by bank provider, can be an empty string).</li>
                <li><strong>Display type</strong> (not mandatory, can be an empty string).</li>
                <li><strong>Operation details</strong> (can be a longer string).</li>
                <li>
                    <strong>Amount</strong> of the operation. Can be a negative number.<br>
                    Note that this can be a string like <code>1 234,55</code> or <code>1,234.55</code>.<br>
                    Every non-digit character (except <code>&plus;</code> and <code>&minus;</code>) will be removed and all remaining numbers will make the amount <strong>in cents</strong>.
                </li>
            </ul>
            Note that you can <strong>change the order of these fields</strong> by drag&dropping them in the form.
        </li>
    </ul>

date_ranges.today: Today
date_ranges.this_week: This week
date_ranges.last_week: Last week
date_ranges.this_month: This month
date_ranges.last_month: Last month
date_ranges.this_year: This year
date_ranges.last_year: Last year
